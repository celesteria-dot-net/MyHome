version: 2.1
executors:
  default:
    working_directory: ~/repo
    docker:
      - image: circleci/node:12.13.1

commands:
  restore_yarn:
    steps:
      - restore_cache:
          name: Restore yarn dependencies
          key: yarn-v2-{{ .Branch }}-{{ checksum "yarn.lock" }}

  save_yarn:
    steps:
      - save_cache:
          name: Cache yarn dependencies
          key: yarn-v2-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules/

jobs:
  setup:
    executor:
      name: default
    steps:
      - checkout
      - restore_yarn
      - run:
          name: Install dependencies
          command: yarn --check-files --frozen-lockfile --non-interactive
      - save_yarn

  format_and_lint:
    executor:
      name: default
    steps:
      - checkout
      - restore_yarn
      - run:
          command: yarn fix

  build:
    steps:
      - checkout
      - restore_yarn
      - run:
          name: Run build
          command: yarn build
      - persist_to_workspace:
          root: .
          paths:
            - build

  deploy:
    parameters:
      env:
        type: enum
        enum: ["dev", "prod"]
    executor:
      name: default
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Change the location of npm-global-install
          command: npm config set prefix '$HOME/.npm-global/'
      - run:
          name: Install firebase-tools
          command: npm install -g firebase-tools
      - run:
          name: Run deploy
          command: firebase deploy --only hosting --project << parameters.env >> --token ${FIREBASE_TOKEN}

workflows:
  version: 2
  format_and_lint:
    jobs:
      - setup
      - format_and_lint:
          requires:
            - setup
      - build:
          requires:
            - setup
          filters:
            branches:
              only:
                - develop
                - main
      - deploy:
          name: deploy_dev
          env: dev
          context: FIREBASE
          requires:
            - format_and_lint
            - build
          filters:
            branches:
              only: develop
      - deploy:
          name: deploy_prod
          env: prod
          context: FIREBASE
          requires:
            - format_and_lint
            - build
          filters:
            branches:
              only: main