version: 2.1
executors:
  default:
    working_directory: ~/repo
    docker:
      - image: circleci/node:12.13.1

commands:
  restore_yarn:
    steps:
      - restore_cache:
          name: Restore yarn dependencies
          key: yarn-v4-{{ .Branch }}-{{ checksum "yarn.lock" }}

  save_yarn:
    steps:
      - save_cache:
          name: Cache yarn dependencies
          key: yarn-v4-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules/

jobs:
  setup:
    executor:
      name: default
    steps:
      - checkout
      - restore_yarn
      - run:
          name: Install dependencies
          command: yarn --check-files --frozen-lockfile --non-interactive
      - save_yarn
      - run:
          command: echo 'REACT_APP_CMS_KEY="'${MICROCMS_TOKEN}\"

  format_and_lint:
    executor:
      name: default
    steps:
      - checkout
      - restore_yarn
      - run:
          command: yarn fix

  build:
    executor:
      name: default
    steps:
      - checkout
      - restore_yarn
      - run:
          name: Create .env
          command: |
            echo 'SKIP_PREFLIGHT_CHECK=true' > .env
            echo 'REACT_APP_CMS_KEY="${MICROCMS_TOKEN}"' >> .env
      - run:
          name: Run build
          command: yarn build
      - persist_to_workspace:
          root: .
          paths:
            - build

  deploy:
    parameters:
      env:
        type: enum
        enum: ["dev", "prod"]
    executor:
      name: default
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Install firebase-tools
          command: |
            npm config set prefix '~/.npm-global/'
            npm install -g firebase-tools
      - run:
          name: Deploy to Firebase
          command: ~/.npm-global/bin/firebase deploy --only hosting --project << parameters.env >> --token ${FIREBASE_TOKEN}

workflows:
  version: 2
  format_and_lint:
    jobs:
      - setup:
          context: TOKENS
      - format_and_lint:
          requires:
            - setup
      - build:
          context: TOKENS
          requires:
            - setup
          filters:
            branches:
              only:
                - develop
                - main
      - deploy:
          name: deploy_dev
          env: dev
          context: TOKENS
          requires:
            - format_and_lint
            - build
          filters:
            branches:
              only: develop
      - deploy:
          name: deploy_prod
          env: prod
          context: TOKENS
          requires:
            - format_and_lint
            - build
          filters:
            branches:
              only: main